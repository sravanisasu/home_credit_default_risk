2024/12/18 10:34:27 INFO mlflow.models.flavor_backend_registry: Selected backend for flavor 'python_function'
2024/12/18 10:34:29 INFO mlflow.pyfunc.backend: Building docker image with name image_regression_demo
DockerException: Error while fetching server API version: ('Connection aborted.', FileNotFoundError(2, 'No such file or directory'))
File /databricks/python/lib/python3.10/site-packages/urllib3/connectionpool.py:703, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)
    702 # Make the request on the httplib connection object.
--> 703 httplib_response = self._make_request(
    704     conn,
    705     method,
    706     url,
    707     timeout=timeout_obj,
    708     body=body,
    709     headers=headers,
    710     chunked=chunked,
    711 )
    713 # If we're going to release the connection in ``finally:``, then
    714 # the response doesn't need to know about the connection. Otherwise
    715 # it will also try to release it and we'll have a double-release
    716 # mess.
File /databricks/python/lib/python3.10/site-packages/urllib3/connectionpool.py:398, in HTTPConnectionPool._make_request(self, conn, method, url, timeout, chunked, **httplib_request_kw)
    397     else:
--> 398         conn.request(method, url, **httplib_request_kw)
    400 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    401 # legitimately able to close the connection after sending a valid response.
    402 # With this behaviour, the received response is still readable.
File /databricks/python/lib/python3.10/site-packages/urllib3/connection.py:239, in HTTPConnection.request(self, method, url, body, headers)
    238     headers["User-Agent"] = _get_default_user_agent()
--> 239 super(HTTPConnection, self).request(method, url, body=body, headers=headers)
File /usr/lib/python3.10/http/client.py:1283, in HTTPConnection.request(self, method, url, body, headers, encode_chunked)
   1282 """Send a complete request to the server."""
-> 1283 self._send_request(method, url, body, headers, encode_chunked)
File /usr/lib/python3.10/http/client.py:1329, in HTTPConnection._send_request(self, method, url, body, headers, encode_chunked)
   1328     body = _encode(body, 'body')
-> 1329 self.endheaders(body, encode_chunked=encode_chunked)
File /usr/lib/python3.10/http/client.py:1278, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1277     raise CannotSendHeader()
-> 1278 self._send_output(message_body, encode_chunked=encode_chunked)
File /usr/lib/python3.10/http/client.py:1038, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1037 del self._buffer[:]
-> 1038 self.send(msg)
   1040 if message_body is not None:
   1041 
   1042     # create a consistent interface to message_body
File /usr/lib/python3.10/http/client.py:976, in HTTPConnection.send(self, data)
    975 if self.auto_open:
--> 976     self.connect()
    977 else:
File /local_disk0/.ephemeral_nfs/envs/pythonEnv-a89635f6-c98f-4951-b41c-c880c3dec1c7/lib/python3.10/site-packages/docker/transport/unixconn.py:26, in UnixHTTPConnection.connect(self)
     25 sock.settimeout(self.timeout)
---> 26 sock.connect(self.unix_socket)
     27 self.sock = sock
FileNotFoundError: [Errno 2] No such file or directory

During handling of the above exception, another exception occurred:
ProtocolError                             Traceback (most recent call last)
File /databricks/python/lib/python3.10/site-packages/requests/adapters.py:489, in HTTPAdapter.send(self, request, stream, timeout, verify, cert, proxies)
    488 if not chunked:
--> 489     resp = conn.urlopen(
    490         method=request.method,
    491         url=url,
    492         body=request.body,
    493         headers=request.headers,
    494         redirect=False,
    495         assert_same_host=False,
    496         preload_content=False,
    497         decode_content=False,
    498         retries=self.max_retries,
    499         timeout=timeout,
    500     )
    502 # Send the request.
    503 else:
File /databricks/python/lib/python3.10/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)
    785     e = ProtocolError("Connection aborted.", e)
--> 787 retries = retries.increment(
    788     method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]
    789 )
    790 retries.sleep()
File /databricks/python/lib/python3.10/site-packages/urllib3/util/retry.py:550, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    549 if read is False or not self._is_method_retryable(method):
--> 550     raise six.reraise(type(error), error, _stacktrace)
    551 elif read is not None:
File /databricks/python/lib/python3.10/site-packages/urllib3/packages/six.py:769, in reraise(tp, value, tb)
    768 if value.__traceback__ is not tb:
--> 769     raise value.with_traceback(tb)
    770 raise value
File /databricks/python/lib/python3.10/site-packages/urllib3/connectionpool.py:703, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)
    702 # Make the request on the httplib connection object.
--> 703 httplib_response = self._make_request(
    704     conn,
    705     method,
    706     url,
    707     timeout=timeout_obj,
    708     body=body,
    709     headers=headers,
    710     chunked=chunked,
    711 )
    713 # If we're going to release the connection in ``finally:``, then
    714 # the response doesn't need to know about the connection. Otherwise
    715 # it will also try to release it and we'll have a double-release
    716 # mess.
File /databricks/python/lib/python3.10/site-packages/urllib3/connectionpool.py:398, in HTTPConnectionPool._make_request(self, conn, method, url, timeout, chunked, **httplib_request_kw)
    397     else:
--> 398         conn.request(method, url, **httplib_request_kw)
    400 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    401 # legitimately able to close the connection after sending a valid response.
    402 # With this behaviour, the received response is still readable.
File /databricks/python/lib/python3.10/site-packages/urllib3/connection.py:239, in HTTPConnection.request(self, method, url, body, headers)
    238     headers["User-Agent"] = _get_default_user_agent()
--> 239 super(HTTPConnection, self).request(method, url, body=body, headers=headers)
File /usr/lib/python3.10/http/client.py:1283, in HTTPConnection.request(self, method, url, body, headers, encode_chunked)
   1282 """Send a complete request to the server."""
-> 1283 self._send_request(method, url, body, headers, encode_chunked)
File /usr/lib/python3.10/http/client.py:1329, in HTTPConnection._send_request(self, method, url, body, headers, encode_chunked)
   1328     body = _encode(body, 'body')
-> 1329 self.endheaders(body, encode_chunked=encode_chunked)
File /usr/lib/python3.10/http/client.py:1278, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1277     raise CannotSendHeader()
-> 1278 self._send_output(message_body, encode_chunked=encode_chunked)
File /usr/lib/python3.10/http/client.py:1038, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1037 del self._buffer[:]
-> 1038 self.send(msg)
   1040 if message_body is not None:
   1041 
   1042     # create a consistent interface to message_body
File /usr/lib/python3.10/http/client.py:976, in HTTPConnection.send(self, data)
    975 if self.auto_open:
--> 976     self.connect()
    977 else:
File /local_disk0/.ephemeral_nfs/envs/pythonEnv-a89635f6-c98f-4951-b41c-c880c3dec1c7/lib/python3.10/site-packages/docker/transport/unixconn.py:26, in UnixHTTPConnection.connect(self)
     25 sock.settimeout(self.timeout)
---> 26 sock.connect(self.unix_socket)
     27 self.sock = sock
ProtocolError: ('Connection aborted.', FileNotFoundError(2, 'No such file or directory'))

During handling of the above exception, another exception occurred:
ConnectionError                           Traceback (most recent call last)
File /local_disk0/.ephemeral_nfs/envs/pythonEnv-a89635f6-c98f-4951-b41c-c880c3dec1c7/lib/python3.10/site-packages/docker/api/client.py:223, in APIClient._retrieve_server_version(self)
    222 try:
--> 223     return self.version(api_version=False)["ApiVersion"]
    224 except KeyError as ke:
File /local_disk0/.ephemeral_nfs/envs/pythonEnv-a89635f6-c98f-4951-b41c-c880c3dec1c7/lib/python3.10/site-packages/docker/api/daemon.py:181, in DaemonApiMixin.version(self, api_version)
    180 url = self._url("/version", versioned_api=api_version)
--> 181 return self._result(self._get(url), json=True)
File /local_disk0/.ephemeral_nfs/envs/pythonEnv-a89635f6-c98f-4951-b41c-c880c3dec1c7/lib/python3.10/site-packages/docker/utils/decorators.py:44, in update_headers.<locals>.inner(self, *args, **kwargs)
     43         kwargs['headers'].update(self._general_configs['HttpHeaders'])
---> 44 return f(self, *args, **kwargs)
File /local_disk0/.ephemeral_nfs/envs/pythonEnv-a89635f6-c98f-4951-b41c-c880c3dec1c7/lib/python3.10/site-packages/docker/api/client.py:246, in APIClient._get(self, url, **kwargs)
    244 @update_headers
    245 def _get(self, url, **kwargs):
--> 246     return self.get(url, **self._set_request_timeout(kwargs))
File /databricks/python/lib/python3.10/site-packages/requests/sessions.py:600, in Session.get(self, url, **kwargs)
    599 kwargs.setdefault("allow_redirects", True)
--> 600 return self.request("GET", url, **kwargs)
File /databricks/python/lib/python3.10/site-packages/requests/sessions.py:587, in Session.request(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)
    586 send_kwargs.update(settings)
--> 587 resp = self.send(prep, **send_kwargs)
    589 return resp
File /databricks/python/lib/python3.10/site-packages/requests/sessions.py:701, in Session.send(self, request, **kwargs)
    700 # Send the request
--> 701 r = adapter.send(request, **kwargs)
    703 # Total elapsed time of the request (approximately)
File /databricks/python/lib/python3.10/site-packages/requests/adapters.py:547, in HTTPAdapter.send(self, request, stream, timeout, verify, cert, proxies)
    546 except (ProtocolError, OSError) as err:
--> 547     raise ConnectionError(err, request=request)
    549 except MaxRetryError as e:
ConnectionError: ('Connection aborted.', FileNotFoundError(2, 'No such file or directory'))

The above exception was the direct cause of the following exception:
DockerException                           Traceback (most recent call last)
File <command-4185876179960312>, line 1
----> 1 mlflow.models.build_docker(
      2     model_uri=model_uri,
      3     name="image_regression_demo",
      4 )
File /local_disk0/.ephemeral_nfs/envs/pythonEnv-a89635f6-c98f-4951-b41c-c880c3dec1c7/lib/python3.10/site-packages/mlflow/models/python_api.py:83, in build_docker(model_uri, name, env_manager, mlflow_home, install_java, install_mlflow, enable_mlserver, base_image)
     18 def build_docker(
     19     model_uri=None,
     20     name="mlflow-pyfunc",
   (...)
     26     base_image=None,
     27 ):
     28     """
     29     Builds a Docker image whose default entrypoint serves an MLflow model at port 8080, using the
     30     python_function flavor. The container serves the model referenced by ``model_uri``, if
   (...)
     81             addition, you must install Java and virtualenv to have the image work properly.
     82     """
---> 83     get_flavor_backend(model_uri, docker_build=True, env_manager=env_manager).build_image(
     84         model_uri,
     85         name,
     86         mlflow_home=mlflow_home,
     87         install_java=install_java,
     88         install_mlflow=install_mlflow,
     89         enable_mlserver=enable_mlserver,
     90         base_image=base_image,
     91     )
File /local_disk0/.ephemeral_nfs/envs/pythonEnv-a89635f6-c98f-4951-b41c-c880c3dec1c7/lib/python3.10/site-packages/mlflow/pyfunc/backend.py:390, in PyFuncBackend.build_image(self, model_uri, image_name, install_java, install_mlflow, mlflow_home, enable_mlserver, base_image)
    379 self.generate_dockerfile(
    380     model_uri=model_uri,
    381     output_dir=cwd,
   (...)
    386     base_image=base_image,
    387 )
    389 _logger.info("Building docker image with name %s", image_name)
--> 390 docker_utils.build_image_from_context(context_dir=cwd, image_name=image_name)
File /local_disk0/.ephemeral_nfs/envs/pythonEnv-a89635f6-c98f-4951-b41c-c880c3dec1c7/lib/python3.10/site-packages/mlflow/models/docker_utils.py:213, in build_image_from_context(context_dir, image_name)
    210 def build_image_from_context(context_dir: str, image_name: str):
    211     import docker
--> 213     client = docker.from_env()
    214     # In Docker < 19, `docker build` doesn't support the `--platform` option
    215     is_platform_supported = int(client.version()["Version"].split(".")[0]) >= 19
File /local_disk0/.ephemeral_nfs/envs/pythonEnv-a89635f6-c98f-4951-b41c-c880c3dec1c7/lib/python3.10/site-packages/docker/client.py:94, in DockerClient.from_env(cls, **kwargs)
     92 version = kwargs.pop('version', None)
     93 use_ssh_client = kwargs.pop('use_ssh_client', False)
---> 94 return cls(
     95     timeout=timeout,
     96     max_pool_size=max_pool_size,
     97     version=version,
     98     use_ssh_client=use_ssh_client,
     99     **kwargs_from_env(**kwargs)
    100 )
File /local_disk0/.ephemeral_nfs/envs/pythonEnv-a89635f6-c98f-4951-b41c-c880c3dec1c7/lib/python3.10/site-packages/docker/client.py:45, in DockerClient.__init__(self, *args, **kwargs)
     44 def __init__(self, *args, **kwargs):
---> 45     self.api = APIClient(*args, **kwargs)
File /local_disk0/.ephemeral_nfs/envs/pythonEnv-a89635f6-c98f-4951-b41c-c880c3dec1c7/lib/python3.10/site-packages/docker/api/client.py:207, in APIClient.__init__(self, base_url, version, timeout, tls, user_agent, num_pools, credstore_env, use_ssh_client, max_pool_size)
    202 # version detection needs to be after unix adapter mounting
    203 if version is None or (isinstance(
    204                         version,
    205                         str
    206                         ) and version.lower() == 'auto'):
--> 207     self._version = self._retrieve_server_version()
    208 else:
    209     self._version = version
File /local_disk0/.ephemeral_nfs/envs/pythonEnv-a89635f6-c98f-4951-b41c-c880c3dec1c7/lib/python3.10/site-packages/docker/api/client.py:230, in APIClient._retrieve_server_version(self)
    225     raise DockerException(
    226         'Invalid response from docker daemon: key "ApiVersion"'
    227         ' is missing.'
    228     ) from ke
    229 except Exception as e:
--> 230     raise DockerException(
    231         f'Error while fetching server API version: {e}'
    232     ) from e

